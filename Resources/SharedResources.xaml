<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Buddie">
    
    <!-- 卡片阴影效果 -->
    <DropShadowEffect x:Key="CardShadow"
                      Color="Black"
                      Direction="270"
                      ShadowDepth="5"
                      Opacity="0.3"
                      BlurRadius="10"/>
    
    <!-- 卡片正面渐变背景 -->
    <LinearGradientBrush x:Key="CardFrontGradient"
                         StartPoint="0,0"
                         EndPoint="1,1">
        <GradientStop Color="LightBlue"
                      Offset="0"/>
        <GradientStop Color="White"
                      Offset="1"/>
    </LinearGradientBrush>
    
    <!-- 卡片背面渐变背景 -->
    <LinearGradientBrush x:Key="CardBackGradient"
                         StartPoint="0,0"
                         EndPoint="1,1">
        <GradientStop Color="LightCoral"
                      Offset="0"/>
        <GradientStop Color="White"
                      Offset="1"/>
    </LinearGradientBrush>
    
    <!-- 值转换器 -->
    <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <local:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter"/>
    <local:BooleanToYesNoConverter x:Key="BooleanToYesNoConverter"/>
    <local:BooleanToColorConverter x:Key="BooleanToColorConverter"/>
    <local:ChannelTypeToNameConverter x:Key="ChannelTypeToNameConverter"/>
    <local:TtsChannelTypeToNameConverter x:Key="TtsChannelTypeToNameConverter"/>
    <local:ComboBoxItemToTtsChannelTypeConverter x:Key="ComboBoxItemToTtsChannelTypeConverter"/>
    <local:ThemeToMessageBackgroundConverter x:Key="ThemeToMessageBackgroundConverter"/>
    <local:ThemeToMessageForegroundConverter x:Key="ThemeToMessageForegroundConverter"/>
    
    <!-- 通用按钮样式 -->
    <Style x:Key="RoundedButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="6"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Opacity"
                                    Value="0.8"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- 圆形按钮样式 -->
    <Style x:Key="CircularButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="15"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#A0FFFFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- 圆角文本框样式 -->
    <Style x:Key="RoundedTextBoxStyle" TargetType="TextBox">
        <Setter Property="CaretBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6"
                            Padding="{TemplateBinding Padding}">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.IsDarkTheme, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="True">
                <Setter Property="Background" Value="#2D2D30"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderBrush" Value="#3F3F46"/>
                <Setter Property="CaretBrush" Value="White"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <!-- 圆角密码框样式 -->
    <Style x:Key="RoundedPasswordBoxStyle" TargetType="PasswordBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6"
                            Padding="{TemplateBinding Padding}">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.IsDarkTheme, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="True">
                <Setter Property="Background" Value="#2D2D30"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderBrush" Value="#3F3F46"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <!-- 自定义TabItem样式 -->
    <Style x:Key="CustomTabItemStyle" TargetType="TabItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border x:Name="Border"
                            Background="Transparent"
                            BorderThickness="0,0,0,2"
                            BorderBrush="Transparent"
                            Padding="15,8">
                        <ContentPresenter x:Name="ContentSite"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          ContentSource="Header"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="#007ACC"/>
                            <Setter Property="Foreground"
                                    Value="#007ACC"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#F0F0F0"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding DataContext.IsDarkTheme, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="True"/>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#404040"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground"
                Value="Black"/>
        <Setter Property="FontWeight"
                Value="Normal"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.IsDarkTheme, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="True">
                <Setter Property="Foreground" Value="White"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- 多行文本框样式 -->
    <Style x:Key="MultilineTextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderBrush" Value="#CED4DA"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CaretBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6"
                            Padding="{TemplateBinding Padding}">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
                                      HorizontalScrollBarVisibility="Disabled"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.IsDarkTheme, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="True">
                <Setter Property="Background" Value="#2D2D30"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderBrush" Value="#3F3F46"/>
                <Setter Property="CaretBrush" Value="White"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- 美观的Toggle开关样式 -->
    <Style x:Key="ToggleSwitchStyle" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        
                        <ContentPresenter Grid.Column="0" 
                                          VerticalAlignment="Center"
                                          Margin="0,0,10,0"/>
                        
                        <Border Grid.Column="1"
                                x:Name="ToggleBackground"
                                Width="44"
                                Height="24"
                                CornerRadius="12"
                                Background="#E4E4E7"
                                BorderThickness="0"
                                Cursor="Hand">
                            <Ellipse x:Name="ToggleButton"
                                     Width="18"
                                     Height="18"
                                     Fill="White"
                                     HorizontalAlignment="Left"
                                     Margin="3,0,0,0">
                                <Ellipse.Effect>
                                    <DropShadowEffect Color="Black" 
                                                      Direction="270" 
                                                      ShadowDepth="1" 
                                                      Opacity="0.3" 
                                                      BlurRadius="3"/>
                                </Ellipse.Effect>
                                <Ellipse.RenderTransform>
                                    <TranslateTransform x:Name="ToggleTransform"/>
                                </Ellipse.RenderTransform>
                            </Ellipse>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- 深色主题基础样式 -->
                        <DataTrigger Binding="{Binding DataContext.IsDarkTheme, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="True">
                            <Setter TargetName="ToggleBackground" Property="Background" Value="#3F3F46"/>
                            <Setter TargetName="ToggleButton" Property="Fill" Value="#CCCCCC"/>
                        </DataTrigger>
                        
                        <!-- 浅色主题选中状态 -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ToggleBackground" Property="Background" Value="#10B981"/>
                            <Setter TargetName="ToggleButton" Property="Fill" Value="White"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ToggleTransform"
                                                         Storyboard.TargetProperty="X"
                                                         To="20"
                                                         Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ToggleTransform"
                                                         Storyboard.TargetProperty="X"
                                                         To="0"
                                                         Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        
                        <!-- 深色主题下选中状态覆盖 -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding DataContext.IsDarkTheme, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="True"/>
                                <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ToggleBackground" Property="Background" Value="#059669"/>
                            <Setter TargetName="ToggleButton" Property="Fill" Value="White"/>
                        </MultiDataTrigger>
                        
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ToggleBackground" Property="Opacity" Value="0.8"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#495057"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.IsDarkTheme, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="True">
                <Setter Property="Foreground" Value="White"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>